// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "id": "1",
          "title": "general",
        },
        Object {
          "id": "2",
          "title": "clothing",
        },
        Object {
          "id": "3",
          "title": "furniture",
        },
        Object {
          "id": "4",
          "title": "books/textbooks",
        },
        Object {
          "id": "5",
          "title": "electronics",
        },
        Object {
          "id": "6",
          "title": "other",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEnabled={false}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 16,
              "elevation": 3,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.22,
              "shadowRadius": 2.22,
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 16,
                "marginBottom": 10,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "padding": 8,
                  "paddingLeft": 16,
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "fontSize": 43,
                    },
                    Object {
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                general
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 16,
              "elevation": 3,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.22,
              "shadowRadius": 2.22,
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 16,
                "marginBottom": 10,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "padding": 8,
                  "paddingLeft": 16,
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "fontSize": 43,
                    },
                    Object {
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                clothing
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 16,
              "elevation": 3,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.22,
              "shadowRadius": 2.22,
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 16,
                "marginBottom": 10,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "padding": 8,
                  "paddingLeft": 16,
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "fontSize": 43,
                    },
                    Object {
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                furniture
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 16,
              "elevation": 3,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.22,
              "shadowRadius": 2.22,
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 16,
                "marginBottom": 10,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "padding": 8,
                  "paddingLeft": 16,
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "fontSize": 43,
                    },
                    Object {
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                books/textbooks
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 16,
              "elevation": 3,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.22,
              "shadowRadius": 2.22,
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 16,
                "marginBottom": 10,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "padding": 8,
                  "paddingLeft": 16,
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "fontSize": 43,
                    },
                    Object {
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                electronics
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 16,
              "elevation": 3,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.22,
              "shadowRadius": 2.22,
            }
          }
        >
          <View
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 16,
                "marginBottom": 10,
                "marginLeft": 20,
                "marginRight": 20,
                "marginTop": 10,
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "padding": 8,
                  "paddingLeft": 16,
                }
              }
            >
              <Text
                onPress={[Function]}
                style={
                  Array [
                    Object {
                      "fontSize": 43,
                    },
                    Object {
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                other
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;
